{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-293976ec\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"루틴 작성\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"routine-add-container\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"day-routine-box\"\n})], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"routine-end-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"8px\"\n  }\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_subheader = _resolveComponent(\"v-list-subheader\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, {\n    id: \"inspire\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_main, {\n      style: {\n        \"background-color\": \"#3B4048\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_container, {\n        class: \"px-2 py-2\",\n        fluid: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, {\n          class: \"right-panel-hot\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_list, {\n            lines: \"two\",\n            style: {\n              \"background-color\": \"#181B21\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_list_subheader, {\n              class: \"right-panel-hot-classify-text\",\n              style: {\n                \"margin\": \"35px\"\n              }\n            }, {\n              default: _withCtx(() => [_hoisted_1]),\n              _: 1 /* STABLE */\n            }), _withDirectives(_createElementVNode(\"input\", {\n              class: \"search-bar\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.titleInput = $event),\n              placeholder: \"제목\",\n              onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.searchBarInput && $options.searchBarInput(...args), [\"enter\"]))\n            }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.titleInput]]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" enter가 가능하도록 input태그 대신 다른 태그 사용 필요 \"), _withDirectives(_createElementVNode(\"input\", {\n              class: \"explanation-bar\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.expInput = $event),\n              placeholder: \"설명\",\n              onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.ExplanationInput && $options.ExplanationInput(...args), [\"enter\"]))\n            }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.expInput]]), _createVNode(_component_v_btn, {\n              class: \"r-submit-button\",\n              color: \"#CD4444\",\n              onClick: $setup.submitData\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"작성 완료\")]),\n              _: 1 /* STABLE */\n            }), _createCommentVNode(\" Add this button \")])]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _hoisted_4, _createVNode(_component_v_card, {\n          class: \"right-panel-new\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" <v-list lines=\\\"two\\\" style=\\\"background-color: #181B21;\\\">\\n\\n                        <div style=\\\"height: 20px;\\\"></div>\\n\\n                        <v-list-subheader class=\\\"right-panel-hot-classify-text\\\" style=\\\"margin-left: 35px;\\\">\\n                            <b>최신 게시글</b>\\n                        </v-list-subheader>\\n\\n                        <div style=\\\"height: 20px;\\\"></div>\\n\\n                        <template v-for=\\\"n in 6\\\" :key=\\\"n\\\">\\n                            <v-list-item\\n                                style=\\\"background-color: #1D2128; color: #FFFFFF; margin: 5px; border-radius: 20px; width:99%\\\">\\n\\n                                <div style=\\\"display: flex;\\\">\\n                                    <v-list-item-title class=\\\"right-panel-new-title\\\">\\n                                        <v-avatar class=\\\"right-panel-new-avatar\\\"></v-avatar>\\n                                        <b style=\\\"margin-left:8px;\\\">{{ n }}번째 제목</b>\\n                                    </v-list-item-title>\\n                                </div>\\n\\n                                <div style=\\\"height: 10px;\\\"></div>\\n\\n                                <div class=\\\"right-panel-new-content\\\">\\n                                    <v-list-item-subtitle>\\n                                        <br>~ 루틴 보여주는 곳 ~<br>\\n                                    </v-list-item-subtitle>\\n                                </div>\\n\\n                            </v-list-item>\\n\\n                        </template>\\n                    </v-list> \")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","style","_createBlock","_component_v_app","id","_createVNode","_component_v_main","_component_v_container","fluid","_component_v_card","_component_v_list","lines","_component_v_list_subheader","_hoisted_1","_ctx","titleInput","$event","placeholder","onKeyup","_cache","_withKeys","args","$options","searchBarInput","_hoisted_2","_hoisted_3","_createCommentVNode","expInput","ExplanationInput","_component_v_btn","color","onClick","$setup","submitData","_hoisted_4"],"sources":["/Users/heekyoung/Desktop/bibim/mainpage/src/views/routine-write.vue"],"sourcesContent":["<template>\n    <v-app id=\"inspire\">\n\n        <v-main style=\"background-color: #3B4048;\">\n            <v-container class=\"px-2 py-2\" fluid>\n                <v-card class=\"right-panel-hot\">\n\n                    <v-list lines=\"two\" style=\"background-color: #181B21;\">\n                        <v-list-subheader class=\"right-panel-hot-classify-text\" style=\"margin: 35px;\">\n                            <b>루틴 작성</b>\n                        </v-list-subheader>\n                        <input class=\"search-bar\" v-model=\"titleInput\" placeholder=\"제목\" @keyup.enter=\"searchBarInput\">\n                        <div class=\"routine-add-container\">\n                            <div class=\"day-routine-box\"></div>\n\n                        </div>\n                        <div class=\"routine-end-container\">\n                            <!-- enter가 가능하도록 input태그 대신 다른 태그 사용 필요 -->\n                            <input class=\"explanation-bar\" v-model=\"expInput\" placeholder=\"설명\"\n                                @keyup.enter=\"ExplanationInput\">\n\n                            <v-btn class=\"r-submit-button\" color=\"#CD4444\" @click=\"submitData\">작성 완료</v-btn>\n                            <!-- Add this button -->\n                        </div>\n\n                    </v-list>\n                </v-card>\n\n                <div style=\"height: 8px;\"></div>\n\n                <v-card class=\"right-panel-new\">\n                    <!-- <v-list lines=\"two\" style=\"background-color: #181B21;\">\n\n                        <div style=\"height: 20px;\"></div>\n\n                        <v-list-subheader class=\"right-panel-hot-classify-text\" style=\"margin-left: 35px;\">\n                            <b>최신 게시글</b>\n                        </v-list-subheader>\n\n                        <div style=\"height: 20px;\"></div>\n\n                        <template v-for=\"n in 6\" :key=\"n\">\n                            <v-list-item\n                                style=\"background-color: #1D2128; color: #FFFFFF; margin: 5px; border-radius: 20px; width:99%\">\n\n                                <div style=\"display: flex;\">\n                                    <v-list-item-title class=\"right-panel-new-title\">\n                                        <v-avatar class=\"right-panel-new-avatar\"></v-avatar>\n                                        <b style=\"margin-left:8px;\">{{ n }}번째 제목</b>\n                                    </v-list-item-title>\n                                </div>\n\n                                <div style=\"height: 10px;\"></div>\n\n                                <div class=\"right-panel-new-content\">\n                                    <v-list-item-subtitle>\n                                        <br>~ 루틴 보여주는 곳 ~<br>\n                                    </v-list-item-subtitle>\n                                </div>\n\n                            </v-list-item>\n\n                        </template>\n                    </v-list> -->\n                </v-card>\n            </v-container>\n        </v-main>\n    </v-app>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport WritePage from '@/views/routine-write.vue'\n\nconst cards = ['루틴 작성', '최신 게시글']\nconst links = [\n    ['mdi-inbox-arrow-down', 'HOME'],\n    ['mdi-send', '루틴 공유'],\n    ['mdi-delete', '루틴 작성'],\n    ['mdi-alert-octagon', '내 루틴 보관함'],\n    ['mdi-alert-octagon', '설정'],\n]\n\nconst drawer = ref(null)\n\nconst submitData = () => {\n    const postData = {\n        title: titleInput,\n        explanation: expInput,\n        // ... other properties ...\n    };\n\n    // Assuming you have an API endpoint for data submission\n    // Replace 'your_api_endpoint' with the actual URL\n    fetch('your_api_endpoint', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData),\n    })\n        .then(response => response.json())\n        .then(data => {\n            // Handle success response from the server if needed\n            console.log('Data successfully submitted:', data);\n        })\n        .catch(error => {\n            // Handle error if data submission fails\n            console.error('Error submitting data:', error);\n        });\n}\n\n\n</script>\n\n<script>\nexport default {\n    data: () => ({\n        cards: ['Today', 'Yesterday'],\n        drawer: null,\n        links: [\n            ['mdi-inbox-arrow-down', 'HOME'],\n            ['mdi-send', '루틴 공유'],\n            ['mdi-delete', '루틴 작성'],\n            ['mdi-alert-octagon', '내 루틴 보관함'],\n            ['mdi-alert-octagon', '설정']\n        ],\n        // textInput: \"\",\n        titleInput: \"\",\n        expInput: \"\",\n    }),\n    components: {\n        'WritePage': WritePage\n    },\n    methods: {\n        searchBarInput() {\n            console.log(this.titleInput); // Log the entered text to the console\n        },\n        ExplanationInput() {\n            console.log(this.expInput);\n        },\n    }\n}\n</script>\n\n<style scoped>\n.search-bar {\n    color: #FFFFFF;\n    border: 2px solid #3A4148;\n    background-color: #24272B;\n    border-radius: 20px;\n    width: 93%;\n    /* width: 1150px; */\n    height: 60px;\n    text-indent: 10px;\n    margin: 10px 35px;\n}\n\n.explanation-bar {\n    color: #FFFFFF;\n    border: 2px solid #3A4148;\n    background-color: #24272B;\n    border-radius: 20px;\n    width: 900px;\n    height: 178px;\n    text-indent: 10px;\n    margin: 10px 35px;\n}\n\n.search-bar::placeholder {\n    font-size: 26px;\n    font-weight: bold;\n    text-align: left;\n    margin-right: 12px;\n    padding-top: 10px;\n}\n\n.explanation-bar::placeholder {\n    font-size: 26px;\n    font-weight: bold;\n    text-align: left;\n    margin-right: 12px;\n    padding-top: 10px;\n}\n\n.right-panel-hot-classify-text {\n    background-color: #181B21;\n    color: #FFFFFF;\n    font-size: 30px;\n    line-height: 30px;\n}\n\n.right-panel-hot {\n    background-color: #CC8484;\n    border-radius: 30px;\n}\n\n.right-panel-hot-title {\n    background-color: #CC8484;\n    border-radius: 20px;\n    align-items: center;\n    width: 12%;\n}\n\n.right-panel-hot-content {\n    background-color: #CC8484;\n    border-radius: 20px;\n    margin: auto;\n    height: 100px;\n    align-items: center;\n    text-align: center;\n}\n\n.right-panel-hot-avatar {\n    background-color: #FFFFFF;\n    margin: auto;\n    align-items: center;\n    text-align: center;\n}\n\n.right-panel-new {\n    background-color: #1D2128;\n    border-radius: 30px;\n}\n\n.right-panel-new-title {\n    background-color: #344054;\n    border-radius: 20px;\n    align-items: center;\n    width: 12%;\n}\n\n.right-panel-new-content {\n    background-color: #344054;\n    border-radius: 20px;\n    margin: auto;\n    height: 100px;\n    align-items: center;\n    text-align: center;\n}\n\n.right-panel-new-avatar {\n    background-color: #FFFFFF;\n    margin: auto;\n    align-items: center;\n    text-align: center;\n}\n\n.routine-add-container {\n    display: flex;\n    justify-content: center;\n    /* width: 1088px; */\n    align-items: flex-start;\n    gap: 12px;\n    margin: 35px 0;\n}\n\n.day-routine-box {\n    width: 208px;\n    height: 600px;\n    flex-shrink: 0;\n    border-radius: 20px;\n    background: #4C6672;\n}\n\n.routine-add-container {\n    display: flex;\n    /* width: 1088px; */\n    align-items: flex-start;\n    gap: 12px;\n}\n\n.routine-end-container {\n    display: flex;\n    align-items: flex-start;\n    gap: 13px;\n}\n\n.r-submit-button {\n    display: flex;\n    width: 200px;\n    height: 178px;\n    padding: 68px;\n    margin: 10px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n\n    border-radius: 20px;\n    color: #FFFFFF;\n\n    font-size: 25px;\n    line-height: 25px;\n    font-weight: bolder;\n}\n</style>"],"mappings":";;gEAS4BA,mBAAA,CAAY,WAAT,OAAK;gEAGZA,mBAAA,CAGM;EAHDC,KAAK,EAAC;AAAuB,I,aAC9BD,mBAAA,CAAmC;EAA9BC,KAAK,EAAC;AAAiB,G;;EAG3BA,KAAK,EAAC;AAAuB;gEAY1CD,mBAAA,CAAgC;EAA3BE,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;;;;;;;;uBA3BrCC,YAAA,CAkEQC,gBAAA;IAlEDC,EAAE,EAAC;EAAS;sBAEf,MA+DS,CA/DTC,YAAA,CA+DSC,iBAAA;MA/DDL,KAAkC,EAAlC;QAAA;MAAA;IAAkC;wBACtC,MA6Dc,CA7DdI,YAAA,CA6DcE,sBAAA;QA7DDP,KAAK,EAAC,WAAW;QAACQ,KAAK,EAAL;;0BAC3B,MAqBS,CArBTH,YAAA,CAqBSI,iBAAA;UArBDT,KAAK,EAAC;QAAiB;4BAE3B,MAkBS,CAlBTK,YAAA,CAkBSK,iBAAA;YAlBDC,KAAK,EAAC,KAAK;YAACV,KAAkC,EAAlC;cAAA;YAAA;;8BAChB,MAEmB,CAFnBI,YAAA,CAEmBO,2BAAA;cAFDZ,KAAK,EAAC,+BAA+B;cAACC,KAAqB,EAArB;gBAAA;cAAA;;gCACpD,MAAY,CAAZY,UAAY,C;;gCAEhBd,mBAAA,CAA8F;cAAvFC,KAAK,EAAC,YAAY;yEAAUc,IAAA,CAAAC,UAAU,GAAAC,MAAA;cAAEC,WAAW,EAAC,IAAI;cAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;2EAAzDP,IAAA,CAAAC,UAAU,E,GAC7CS,UAGM,EACNzB,mBAAA,CAOM,OAPN0B,UAOM,GANFC,mBAAA,yCAA4C,E,gBAC5C3B,mBAAA,CACoC;cAD7BC,KAAK,EAAC,iBAAiB;yEAAUc,IAAA,CAAAa,QAAQ,GAAAX,MAAA;cAAEC,WAAW,EAAC,IAAI;cAC7DC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAM,gBAAA,IAAAN,QAAA,CAAAM,gBAAA,IAAAP,IAAA,CAAgB;2EADMP,IAAA,CAAAa,QAAQ,E,GAGhDtB,YAAA,CAAgFwB,gBAAA;cAAzE7B,KAAK,EAAC,iBAAiB;cAAC8B,KAAK,EAAC,SAAS;cAAEC,OAAK,EAAEC,MAAA,CAAAC;;gCAAY,MAAK,C,iBAAL,OAAK,E;;gBACxEP,mBAAA,qBAAwB,C;;;;;YAMpCQ,UAAgC,EAEhC7B,YAAA,CAkCSI,iBAAA;UAlCDT,KAAK,EAAC;QAAiB;4BAC3B,MAgCa,CAhCb0B,mBAAA,ohDAgCa,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}